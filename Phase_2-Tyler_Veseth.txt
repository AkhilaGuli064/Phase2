*************
* Team Info *
*************

	Tyler Veseth
	Team with one member
	Responsible for all tables
	

*********************
* Total Tuple Tally *
*********************

chars - 12
items - 10 + 10 + 4
armor - 10
weapon - 10
spell - 5
char_spell - 22
party - 3
char_party - 12
orginization - 3
location - 5
association - 9




********************************
* Generate and Populate Tables *
********************************


CREATE TABLE organization (
id int 						NOT NULL, 
org_name varchar(20) 		NOT NULL, 
description varchar(60), 	
PRIMARY KEY(id)
);

CREATE TABLE location (
org_id int 					NOT NULL, 
location varchar(20), 
PRIMARY KEY(org_id, location),
FOREIGN KEY(org_id) REFERENCES organization(id)
);

CREATE TABLE association (
	org_id int				NOT NULL,
	party_id int			NOT NULL,
	relation int			NOT NULL,
PRIMARY KEY(org_id, party_id),
FOREIGN KEY(org_id) REFERENCES organization(id),
FOREIGN KEY(party_id) REFERENCES party(id)
);

CREATE TABLE party (
	id int					NOT NULL,
	party_name varchar(20)	NOT NULL,
	color char(6),
	PRIMARY KEY(id)
);

CREATE TABLE char_party (
	char_id int				NOT NULL,
	party_id int			NOT NULL,
PRIMARY KEY(char_id, party_id),
FOREIGN KEY(char_id) REFERENCES game_character(id),
FOREIGN KEY(party_id) REFERENCES party(id)
);

CREATE TABLE game_character (
	id int					NOT NULL,
	char_name varchar(20)	NOT NULL,
	description varchar(60),
	PRIMARY KEY(id)
);

CREATE TABLE char_spell (
	char_id int				NOT NULL,
	spell_id int			NOT NULL,
PRIMARY KEY(char_id, spell_id),
FOREIGN KEY(char_id) REFERENCES game_character(id),
FOREIGN KEY(spell_id) REFERENCES spell(id)
);

CREATE TABLE spell (
	id int					NOT NULL,
	spell_name varchar(20)	NOT NULL,
	description varchar(60),
	PRIMARY KEY(id)
);

CREATE TABLE item (
	char_id int				NOT NULL,
	num int		 			NOT NULL,
	item_name varchar(20)	NOT NULL,
	weight int,
	description varchar(60),
	PRIMARY KEY(char_id, num),
	FOREIGN KEY(char_id) REFERENCES game_character(id)
);

CREATE TABLE weapon (
	char_id int				NOT NULL,
	num int					NOT NULL,
	damage_type varchar(12)	NOT NULL,
	damage int				NOT NULL,
	PRIMARY KEY(char_id, num),
	FOREIGN KEY(char_id) REFERENCES item(char_id),
	FOREIGN KEY(num) REFERENCES item(num)
);

CREATE TABLE armor (
	char_id int				NOT NULL,
	num int					NOT NULL,
	class int				NOT NULL,
	PRIMARY KEY(char_id, num),
	FOREIGN KEY(char_id) REFERENCES item(char_id),
	FOREIGN KEY(num) REFERENCES item(num)
);






INSERT INTO game_character(char_name, id, description) VALUES
	('name', 1, 'female human'),
	('name', 2, 'male human'),
	('name', 3, 'female elf'),
	('name', 4, 'male half-elf'),
	('name', 5, 'male dwarf'),
	('name', 6, 'female half-orc'),
	('name', 7, 'female halfling'),
	('name', 8, 'female half-elf'),
	('name', 9, 'male elf'),
	('name', 10, 'male elf'),
	('name', 11, 'male dwarf'),
	('name', 12, 'male halfling');
	
INSERT INTO item(char_id, num, item_name, weight, description) VALUES
	(1, 1, 'Padded Armor', 10, 'light, stealth disadvantage'),
	(2, 1, 'Leather Armor', 15, 'light'),
	(3, 1, 'Padded Armor', 10, 'light, stealth disadvantage'),
	(4, 1, 'Half-plate Armor', 50, 'medium, stealth disadvantage'),
	(6, 1, 'Scale mail Armor', 30, 'medium, stealth disadvantage'),
	(6, 2, 'Shield', 6, 'light steel'),
	(7, 1, 'Banded mail Armor', 35, 'medium'),
	(10, 1, 'Leather Armor', 15, 'light'),
	(11, 1, 'Chainmail Armor', 40, 'heavy, stealth disadvantage, Str 13'),
	(12, 1, 'Hide Armor', 25, 'medium'),
	
	(1, 2, 'Club', 2, 'light'),
	(2, 2, 'Dagger', 1, 'finesse, light, thrown'),
	(4, 2, 'Greatclub', 10, 'two-handed'),
	(5, 2, 'Light Hammer', 2, 'light, thrown'),
	(6, 3, 'Shortsword', 2, 'finesse, light'),
	(8, 2, 'Sickle', 2, 'light'),
	(9, 2, 'Handaxe', 2, 'light, thrown'),
	(9, 3, 'Whip', 3, 'finesse, reach'),
	(11, 2, 'Halberd', 6, 'heavy, reach, two-handed'),
	(12, 2, 'Greatsword', 6, 'heavy, two-handed'),
	
	(1, 3, 'Health Potion', 1, 'heals 5 damage'),
	(8, 3, 'Wooden Staff', 2, 'wooden staff used for walking'),
	(9, 4, 'Ruby Medalion', 1, 'decorative medalion worth 50 gold'),
	(11, 3, 'Health Potion', 1, 'heals 5 damage');

INSERT INTO armor(char_id, num, class) VALUES
	(1, 1, 11),
	(2, 1, 11),
	(3, 1, 11),
	(4, 1, 15),
	(6, 1, 14),
	(6, 2, 2),
	(7, 1, 13),
	(10, 1, 11),
	(11, 1, 16),
	(12, 1, 12);
	
INSERT INTO weapon(char_id, num, damage, damage_type) VALUES
	(1, 2, 4, 'bludgeoning'),
	(2, 2, 4, 'piercing'),
	(4, 2, 8, 'bludgeoning'),
	(5, 2, 4, 'bludgeoning'),
	(6, 3, 6, 'piercing'),
	(8, 2, 4, 'slashing'),
	(9, 2, 6, 'slashing'),
	(9, 3, 4, 'slashing'),
	(11, 2, 10, 'slashing'),
	(12, 2, 12, 'slashing');
	
INSERT INTO spell(id, spell_name, description) VALUES
	(1, 'Fire Bolt', '120 feet, 10 damage'),
	(2, 'Lightning', '100 feet, 48 damage'),
	(3, 'Control Water', 'Concentration, 10 minutes'),
	(4, 'Healing Word', '60 feet, 4 healing'),
	(5, 'Invisibility', 'Conventration, 1 hour');
	
INSERT INTO char_spell(char_id, spell_id) VALUES
	(1, 1),
	(1, 2),
	(2, 3),
	(2, 5),
	(3, 1),
	(3, 2),
	(3, 3),
	(4, 3),
	(4, 4),
	(4, 5),
	(5, 2),
	(5, 3),
	(7, 2),
	(8, 1),
	(8, 2),
	(8, 3),
	(8, 4),
	(8, 5),
	(10, 4),
	(10, 5),
	(12, 1),
	(12, 2);
	
INSERT INTO party(id, party_name, color) VALUES
	(1, 'Players', '00ff00'),
	(2, 'Bandits', 'ff0000'),
	(3, 'Guards', '0000ff');

INSERT INTO char_party(party_id, char_id) VALUES
	(1, 1),
	(1, 2),
	(1, 3),
	(1, 4),
	(2, 5),
	(2, 6),
	(2, 7),
	(1, 8),
	(3, 9),
	(3, 10),
	(3, 11),
	(3, 12);
	
INSERT INTO organization(id, org_name, description) VALUES
	(1, 'Westburrow Theives', 'The band of thieves living in Wetburrow Hollow'),
	(2, 'Riverton Guards', 'The local authorities from Riverton'),
	(3, 'Riverton Miners', 'The workers of the Riverton mining camp');
	
INSERT INTO location(org_id, location) VALUES
	(1, 'Westburrow Hollow'),
	(2, 'Riverton'),
	(2, 'Riverton Mines'),
	(3, 'Riverton'),
	(3, 'Riverton Mines');

INSERT INTO association(party_id, org_id, relation) VALUES
	(1, 1, -3),
	(1, 2, 7),
	(1, 3, 1),
	(2, 1, 9),
	(2, 2, -8),
	(2, 3, -3),
	(3, 1, -10),
	(3, 2, 10),
	(3, 3, -1);

	
	
	
	
	
	
	
	
	
***************
* SQL Queries *
***************

	1. Queries that show that constraints(primary key, foreign key, unique, and check) are enforced.
	
	
	2. All types of join expressions discussed in chap 4 including outer joins
	
	
	3. Renaming
	
	
	4. String operations
	
	
	5. Group by
	
	
	6. aggregating
	
	
	7. having
	
	
	8. order by
	
	
	9. set union
	
	
	10. intersection
	
	
	11. minus
	
	
	12. nested queries
	
	
	13. for set membership
	
	
	14. set comparison
	
	
	15. testing for empty relation and
	
	
	16. absence of duplicate tuples
	
	
	17. nested queries in the from clause
	
	
	18 with clause
	
	
	19. deletion of tuples
	
	
	20. updating of tuples
	
	
	21. inserting of tuples selected from one table into another table
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
*****************************************
* Original SQL Specificans from Phase 1 *
*****************************************



CREATE TABLE organization (
id int 					NOT NULL, 
name varchar(20) 			NOT NULL, 
description varchar(60), 
PRIMARY KEY(id)
);

CREATE TABLE location (
organization_id int 			NOT NULL, 
location varchar(20), 
FOREIGN KEY(organization_id) REFERENCES organization(id),
ON DELETE CASCADE
);

CREATE TABLE association (
	org_id int				NOT NULL,
	party_id int				NOT NULL,
	relation int				NOT NULL,
FOREIGN KEY(org_id) REFERENCES organization(id),
FOREIGN KEY(party_id) REFERENCES party(id)
);

CREATE TABLE party (
	id int					NOT NULL,
	name varchar(20)			NOT NULL,
	color char(6),
	PRIMARTY KEY(id)
);

CREATE TABLE char_party (
	char_id int				NOT NULL,
	party_id int				NOT NULL,
FOREIGN KEY(char_id) REFERENCES character(id),
FOREIGN KEY(party_id) REFERENCES party(id)
);

CREATE TABLE character (
	id int					NOT NULL,
	name varchar(20)			NOT NULL,
	description varchar(60),
	PRIMARTY KEY(id)
);

CREATE TABLE char_spell (
	char_id int				NOT NULL,
	spell_id int				NOT NULL,
FOREIGN KEY(char_id) REFERENCES character(id),
FOREIGN KEY(spell_id) REFERENCES spell(id)
);

CREATE TABLE spell (
	id int					NOT NULL,
	name varchar(20)			NOT NULL,
	description varchar(60),
	PRIMARTY KEY(id)
);

CREATE TABLE item (
	char_id int				NOT NULL,
number int		 		NOT NULL,
name varchar(20)			NOT NULL,
weight int,
description varchar(60),
PRIMARY KEY(number),
FOREIGN KEY(char_id) REFERENCES character(id),
ON DELETE CASCADE
);

CREATE TABLE weapon (
	char_id int				NOT NULL,
	number int				NOT NULL,
	type varchar(10)			NOT NULL,
	damage int				NOT NULL,
FOREIGN KEY(char_id) REFERENCES character(id),
	FOREIGN KEY(number) REFERENCES item(number)
);

CREATE TABLE armor (
	char_id int				NOT NULL,
	number int				NOT NULL,
	class int				NOT NULL,
FOREIGN KEY(char_id) REFERENCES character(id),
	FOREIGN KEY(number) REFERENCES item(number)
);




***********
* Changes *
***********

	1. There are three instances of the word PRIMARY where somehow in my word document it was saved as PRIMARTY. Once the T's were removed the
	script ran as expected however I am not sure how they got there in the first place.
	
	2. In the location, association, char_party, char_spell, weapon and armor tables, I thought that declaring the FOREIGN keys would be enough,
	however I needed to create primary keys as well. While technically It worked, it wasn't initialized the way that I had wanted.
	
	3. I renamed the location key organization_id to org_id just to simplify it.
